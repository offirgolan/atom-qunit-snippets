'.source.js':
  'QUnit: equal':
    'prefix': 'equal'
    'body': "assert.equal(${1:actual}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: deepEqual':
    'prefix': 'deepEqual'
    'body': "assert.deepEqual(${1:actual}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: notDeepEqual':
    'prefix': 'notDeepEqual'
    'body': "assert.notDeepEqual(${1:actual}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: notEqual':
    'prefix': 'notEqual'
    'body': "assert.notEqual(${1:actual}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: notPropEqual':
    'prefix': 'notPropEqual'
    'body': "assert.notPropEqual(${1:actual}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: notStrictEqual':
    'prefix': 'notStrictEqual'
    'body': "assert.notStrictEqual(${1:actual}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: ok':
    'prefix': 'ok'
    'body': "assert.ok(${1:state}${2:, '${3:message}'});"

  'QUnit: propEqual':
    'prefix': 'propEqual'
    'body': "assert.propEqual(${1:actual}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: strictEqual':
    'prefix': 'strictEqual'
    'body': "assert.strictEqual(${1:actual}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: throws':
    'prefix': 'throws'
    'body': "assert.throws(${1:block}, ${2:expected}${3:, '${4:message}'});"

  'QUnit: async':
    'prefix': 'async'
    'body': "assert.async();${1}"

  'QUnit: expect':
    'prefix': 'expect'
    'body': "assert.expect(${1:amount});"
